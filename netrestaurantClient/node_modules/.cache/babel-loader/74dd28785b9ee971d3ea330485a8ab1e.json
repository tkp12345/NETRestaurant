{"ast":null,"code":"var _jsxFileName = \"/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/context/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, children, useMemo, useState, createRef, createContext, useImperativeHandle, useCallback } from 'react';\nimport Login from '../layout/Login'; //context api 사용법 : https://kyounghwan01.github.io/blog/React/react-context-api/#api\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({}); //createRef 훅 사용법 : https://velog.io/@hoon_dev/React-Ref-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0feat-createRef\n\nconst contextRef = /*#__PURE__*/createRef();\n/*****************************************************************\n *  AUTH 기능 ContextApi 컴포넌트\n * \n * \n * authService : 권한 설정(로그인 , 로그아웃, 회원가입 , Auth) 클래스 \n * authController : 권한 설정 감지 \n *****************************************************************/\n\nconst AuthForm = _ref => {\n  _s();\n\n  let {\n    authService,\n    authController,\n    children\n  } = _ref;\n  const [isLogin, setIsLogin] = useState(false); //자식에있는 요소를 부모에서 호출하기 위한 훅 :https://developer-alle.tistory.com/372\n\n  useImperativeHandle(contextRef, () => isLogin ? isLogin.token : false); //service 주입 api 요청 \n\n  const onSignUp = useCallback(async (username, password, name, email) => {\n    console.log('회원가입....');\n    authService.signup(username, password, name, email).then(res => setIsLogin(res));\n  }, [authService]);\n  const onLogin = useCallback(async (username, password, name, email) => {\n    console.log('로그인....');\n    authService.login(username, password).then(res => {\n      setIsLogin(res);\n      console.log('res:', res);\n    });\n  }, [authService]);\n  const onLogout = useCallback(async (username, password, name, email) => {\n    authService.logout().then(() => setIsLogin(false));\n  }, [authService]); //contextApi 를 사용하기위한 상위 선언변수들을 넣어줍니다 \n\n  const contextForm = useMemo(() => ({\n    isLogin,\n    onSignUp,\n    onLogin,\n    onLogout\n  }), [isLogin, onSignUp, onLogin, onLogout]);\n  console.log('AuthForm- 로그인 확인:', isLogin);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextForm,\n    children: isLogin ? //하위 요소 호출 \n    children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        onSignUp: onSignUp,\n        onLogin: onLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthForm, \"aP19JDefFXGM/7DcbqnU9jP66iM=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","children","useMemo","useState","createRef","createContext","useImperativeHandle","useCallback","Login","AuthContext","contextRef","AuthForm","authService","authController","isLogin","setIsLogin","token","onSignUp","username","password","name","email","console","log","signup","then","res","onLogin","login","onLogout","logout","contextForm"],"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/context/AuthForm.js"],"sourcesContent":["import {React,children,useMemo,useState,createRef,createContext,useImperativeHandle,useCallback} from 'react';\nimport Login from '../layout/Login';\n\n\n//context api 사용법 : https://kyounghwan01.github.io/blog/React/react-context-api/#api\nconst AuthContext = createContext({});\n\n//createRef 훅 사용법 : https://velog.io/@hoon_dev/React-Ref-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0feat-createRef\nconst contextRef = createRef();\n\n\n/*****************************************************************\n *  AUTH 기능 ContextApi 컴포넌트\n * \n * \n * authService : 권한 설정(로그인 , 로그아웃, 회원가입 , Auth) 클래스 \n * authController : 권한 설정 감지 \n *****************************************************************/\nconst AuthForm = ({authService,authController,children}) => {\nconst [isLogin,setIsLogin] = useState(false);\n\n  //자식에있는 요소를 부모에서 호출하기 위한 훅 :https://developer-alle.tistory.com/372\n  useImperativeHandle(contextRef, () => (isLogin ? isLogin.token : false));\n\n//service 주입 api 요청 \nconst onSignUp =useCallback(async (username,password,name,email)=>{\n        console.log('회원가입....')\n    authService.signup(username,password,name,email)\n    .then((res)=>setIsLogin(res))\n},[authService]);\n\nconst onLogin =useCallback(async (username,password,name,email)=>{\n    console.log('로그인....')\n    authService.login(username, password)\n    .then((res)=> {setIsLogin(res)\n         console.log('res:',res)})\n},[authService]);\nconst onLogout =useCallback(async (username,password,name,email)=>{\n    authService.logout()\n    .then(() => setIsLogin(false))\n},[authService]);\n\n//contextApi 를 사용하기위한 상위 선언변수들을 넣어줍니다 \nconst contextForm = useMemo(()=>({\n    isLogin,\n    onSignUp,\n    onLogin,\n    onLogout,\n}),[isLogin,\n    onSignUp,\n    onLogin,\n    onLogout]);\n\nconsole.log('AuthForm- 로그인 확인:',isLogin)\n\n    return (\n        <AuthContext.Provider value={contextForm}>\n            {isLogin?(\n                //하위 요소 호출 \n                children\n            ):(\n                <div>\n                    <Login onSignUp={onSignUp} onLogin={onLogin}/>\n                </div>\n            )}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthForm;"],"mappings":";;;AAAA,SAAQA,KAAR,EAAcC,QAAd,EAAuBC,OAAvB,EAA+BC,QAA/B,EAAwCC,SAAxC,EAAkDC,aAAlD,EAAgEC,mBAAhE,EAAoFC,WAApF,QAAsG,OAAtG;AACA,OAAOC,KAAP,MAAkB,iBAAlB,C,CAGA;;;AACA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,EAAD,CAAjC,C,CAEA;;AACA,MAAMK,UAAU,gBAAGN,SAAS,EAA5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMO,QAAQ,GAAG,QAA2C;EAAA;;EAAA,IAA1C;IAACC,WAAD;IAAaC,cAAb;IAA4BZ;EAA5B,CAA0C;EAC5D,MAAM,CAACa,OAAD,EAASC,UAAT,IAAuBZ,QAAQ,CAAC,KAAD,CAArC,CAD4D,CAG1D;;EACAG,mBAAmB,CAACI,UAAD,EAAa,MAAOI,OAAO,GAAGA,OAAO,CAACE,KAAX,GAAmB,KAA9C,CAAnB,CAJ0D,CAM5D;;EACA,MAAMC,QAAQ,GAAEV,WAAW,CAAC,OAAOW,QAAP,EAAgBC,QAAhB,EAAyBC,IAAzB,EAA8BC,KAA9B,KAAsC;IAC1DC,OAAO,CAACC,GAAR,CAAY,UAAZ;IACJX,WAAW,CAACY,MAAZ,CAAmBN,QAAnB,EAA4BC,QAA5B,EAAqCC,IAArC,EAA0CC,KAA1C,EACCI,IADD,CACOC,GAAD,IAAOX,UAAU,CAACW,GAAD,CADvB;EAEH,CAJ0B,EAIzB,CAACd,WAAD,CAJyB,CAA3B;EAMA,MAAMe,OAAO,GAAEpB,WAAW,CAAC,OAAOW,QAAP,EAAgBC,QAAhB,EAAyBC,IAAzB,EAA8BC,KAA9B,KAAsC;IAC7DC,OAAO,CAACC,GAAR,CAAY,SAAZ;IACAX,WAAW,CAACgB,KAAZ,CAAkBV,QAAlB,EAA4BC,QAA5B,EACCM,IADD,CACOC,GAAD,IAAQ;MAACX,UAAU,CAACW,GAAD,CAAV;MACVJ,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBG,GAAnB;IAAwB,CAF7B;EAGH,CALyB,EAKxB,CAACd,WAAD,CALwB,CAA1B;EAMA,MAAMiB,QAAQ,GAAEtB,WAAW,CAAC,OAAOW,QAAP,EAAgBC,QAAhB,EAAyBC,IAAzB,EAA8BC,KAA9B,KAAsC;IAC9DT,WAAW,CAACkB,MAAZ,GACCL,IADD,CACM,MAAMV,UAAU,CAAC,KAAD,CADtB;EAEH,CAH0B,EAGzB,CAACH,WAAD,CAHyB,CAA3B,CAnB4D,CAwB5D;;EACA,MAAMmB,WAAW,GAAG7B,OAAO,CAAC,OAAK;IAC7BY,OAD6B;IAE7BG,QAF6B;IAG7BU,OAH6B;IAI7BE;EAJ6B,CAAL,CAAD,EAKxB,CAACf,OAAD,EACCG,QADD,EAECU,OAFD,EAGCE,QAHD,CALwB,CAA3B;EAUAP,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCT,OAAhC;EAEI,oBACI,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEiB,WAA7B;IAAA,UACKjB,OAAO,GACJ;IACAb,QAFI,gBAIJ;MAAA,uBACI,QAAC,KAAD;QAAO,QAAQ,EAAEgB,QAAjB;QAA2B,OAAO,EAAEU;MAApC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EALR;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAjDD;;GAAMhB,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}