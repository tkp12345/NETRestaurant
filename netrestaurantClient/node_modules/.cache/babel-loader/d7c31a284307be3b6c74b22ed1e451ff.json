{"ast":null,"code":"// import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\nimport { KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\nconst {\n  kakao\n} = window; // https://apis.map.kakao.com/web/sample/keywordBasic/\n\nexport default function kakaoMapApi() {\n  let currCategory = ''; // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n\n  const placeOverlay = new kakao.maps.CustomOverlay({\n    zIndex: 1\n  }),\n        contentNode = document.createElement('div'),\n        // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \n  markers = []; // 마커를 담을 배열입니다\n  // currCategory = ''; \n  // 현재 선택된 카테고리를 가지고 있을 변수입니다;\n\n  const mapContainer = document.getElementById(KAKO_DOCUMENT_ID);\n  console.log('mapContainer', mapContainer);\n  const mapOption = {\n    center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.lon),\n    level: 4\n  };\n  const map = new kakao.maps.Map(mapContainer, mapOption);\n  console.log('kakao', kakao); // 장소 검색 객체를 생성합니다\n\n  const ps = new kakao.maps.services.Places(map);\n  console.log('ps', ps); // 지도에 idle 이벤트를 등록합니다\n  //searchPlaces : 콜백함수 \n\n  kakao.maps.event.addListener(map, 'idle', searchPlaces);\n  console.log('contentNode:', contentNode); // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \n\n  contentNode.className = 'placeinfo_wrap'; // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n  // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \n\n  addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\n  addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap); // 커스텀 오버레이 컨텐츠를 설정합니다\n\n  placeOverlay.setContent(contentNode); // 각 카테고리에 클릭 이벤트를 등록합니다\n\n  addCategoryClickEvent(); // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent('on' + type, callback);\n    }\n  } // 카테고리 검색을 요청하는 함수입니다\n\n\n  function searchPlaces() {\n    console.log('🚩searchPlaces 카테고리 검색을 요청하는 함수:');\n    console.log('currCategory:', currCategory);\n\n    if (!currCategory) {\n      console.log('설마 여기입니까 ?');\n      return;\n    } // 커스텀 오버레이를 숨깁니다 \n\n\n    placeOverlay.setMap(null);\n    console.log('  // 커스텀 오버레이를 숨깁니다-placeOverlay :', placeOverlay); // 지도에 표시되고 있는 마커를 제거합니다\n\n    removeMarker();\n    contentNode.log('검색된값:', currCategory);\n    ps.categorySearch(currCategory, placesSearchCB, {\n      useMapBounds: true\n    });\n  } // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\n\n  function placesSearchCB(data, status, pagination) {\n    console.log('👦장소 검색 완료');\n\n    if (status === kakao.maps.services.Status.OK) {\n      // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n      displayPlaces(data);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {// 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    } else if (status === kakao.maps.services.Status.ERROR) {// 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    }\n  } // 지도에 마커를 표출하는 함수입니다\n\n\n  function displayPlaces(places) {\n    console.log('🚩addMarker:', addMarker); // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n\n    var order = document.getElementById(currCategory).getAttribute('data-order');\n\n    for (var i = 0; i < places.length; i++) {\n      // 마커를 생성하고 지도에 표시합니다\n      var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x), order); // 마커와 검색결과 항목을 클릭 했을 때\n      // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n\n      (function (marker, place) {\n        console.log('마커클릭');\n        kakao.maps.event.addListener(marker, 'click', function () {\n          displayPlaceInfo(place);\n        });\n      })(marker, places[i]);\n    }\n  } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n  function addMarker(position, order) {\n    console.log('🚩addMarker:', addMarker);\n    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png',\n        // 마커 이미지 url, 스프라이트 이미지를 씁니다\n    imageSize = new kakao.maps.Size(27, 28),\n        // 마커 이미지의 크기\n    imgOptions = {\n      spriteSize: new kakao.maps.Size(72, 208),\n      // 스프라이트 이미지의 크기\n      spriteOrigin: new kakao.maps.Point(46, order * 36),\n      // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n      offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n    },\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n        marker = new kakao.maps.Marker({\n      position: position,\n      // 마커의 위치\n      image: markerImage\n    });\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n    console.log('👴markers:', markers);\n    return marker;\n  } // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\n\n  function removeMarker() {\n    for (var i = 0; i < markers.length; i++) {\n      markers[i].setMap(null);\n    }\n\n    markers = [];\n  } // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n\n\n  function displayPlaceInfo(place) {\n    console.log('클릭한 장소정보 호출');\n    console.log('place:', place);\n    var content = '<div class=\"placeinfo\">' + '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';\n\n    if (place.road_address_name) {\n      content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' + '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n    } else {\n      content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n    }\n\n    content += '    <span class=\"tel\">' + place.phone + '</span>' + '</div>' + '<div class=\"after\"></div>';\n    contentNode.innerHTML = content;\n    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n    placeOverlay.setMap(map);\n  } // 각 카테고리에 클릭 이벤트를 등록합니다\n\n\n  function addCategoryClickEvent() {\n    console.log('카테고리 클릭 이벤트 등록 ');\n    var category = document.getElementById('category'),\n        children = category.children;\n    console.log('카테고리:', category);\n\n    for (var i = 0; i < children.length; i++) {\n      children[i].onclick = onClickCategory;\n      console.log('onClickCategory:', onClickCategory);\n    }\n  } //👨 여기서 문제발생 \n  //👨  searchPlaces 호출이 안됨\n  // 카테고리를 클릭했을 때 호출되는 함수입니다\n\n\n  function onClickCategory() {\n    console.log('🚩카테고리 클릭-onClickCategory');\n    console.log('this:', this);\n    var id = this.id,\n        className = this.className;\n    placeOverlay.setMap(null);\n\n    if (className === 'on') {\n      currCategory = '';\n      changeCategoryClass();\n      removeMarker();\n    } else {\n      console.log('🚩카테고리 클릭-트리거');\n      currCategory = id;\n      console.log('currCategory:', currCategory);\n      changeCategoryClass(this);\n      searchPlaces();\n    }\n  } // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n\n\n  function changeCategoryClass(el) {\n    console.log('👴changeCategoryClass');\n    var category = document.getElementById('category'),\n        children = category.children,\n        i;\n\n    for (i = 0; i < children.length; i++) {\n      children[i].className = '';\n    }\n\n    if (el) {\n      el.className = 'on';\n    }\n  }\n}","map":{"version":3,"names":["KAKO_DOCUMENT_ID","NET_LOCATION","kakao","window","kakaoMapApi","currCategory","placeOverlay","maps","CustomOverlay","zIndex","contentNode","document","createElement","markers","mapContainer","getElementById","console","log","mapOption","center","LatLng","let","lon","level","map","Map","ps","services","Places","event","addListener","searchPlaces","className","addEventHandle","preventMap","setContent","addCategoryClickEvent","target","type","callback","addEventListener","attachEvent","setMap","removeMarker","categorySearch","placesSearchCB","useMapBounds","data","status","pagination","Status","OK","displayPlaces","ZERO_RESULT","ERROR","places","addMarker","order","getAttribute","i","length","marker","y","x","place","displayPlaceInfo","position","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","push","content","place_url","place_name","road_address_name","address_name","phone","innerHTML","setPosition","category","children","onclick","onClickCategory","id","changeCategoryClass","el"],"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/util/kakaoMapApi.js"],"sourcesContent":["// import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\n\nimport { KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\n\n\nconst { kakao } = window;\n\n// https://apis.map.kakao.com/web/sample/keywordBasic/\nexport default function kakaoMapApi() {\nlet currCategory='';\n\n// 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n    const placeOverlay  = new kakao.maps.CustomOverlay({zIndex:1}), \n    contentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다 \n    markers = []; // 마커를 담을 배열입니다\n    // currCategory = ''; \n    // 현재 선택된 카테고리를 가지고 있을 변수입니다;\n\n\n\n    const mapContainer  = document.getElementById(KAKO_DOCUMENT_ID);\n    console.log('mapContainer',mapContainer )\n    const mapOption  = {\n        center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.lon),\n        level: 4\n    };\n\n    const map = new kakao.maps.Map(mapContainer , mapOption );\n    console.log('kakao',kakao )\n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places(map); \n    console.log('ps',ps)\n\n\n    // 지도에 idle 이벤트를 등록합니다\n    //searchPlaces : 콜백함수 \n    kakao.maps.event.addListener(map, 'idle', searchPlaces);\n\n\nconsole.log('contentNode:',contentNode)\n// 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다 \ncontentNode.className = 'placeinfo_wrap';\n\n// 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n// 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다 \naddEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\naddEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\n\n// 커스텀 오버레이 컨텐츠를 설정합니다\nplaceOverlay.setContent(contentNode);  \n\n// 각 카테고리에 클릭 이벤트를 등록합니다\naddCategoryClickEvent();\n\n// 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\nfunction addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n        target.addEventListener(type, callback);\n    } else {\n        target.attachEvent('on' + type, callback);\n    }\n}\n\n// 카테고리 검색을 요청하는 함수입니다\nfunction searchPlaces() {\n    console.log('🚩searchPlaces 카테고리 검색을 요청하는 함수:' )\n    console.log('currCategory:',currCategory);\n    if (!currCategory) {\n        console.log('설마 여기입니까 ?')\n        return;\n    }\n    // 커스텀 오버레이를 숨깁니다 \n    placeOverlay.setMap(null);\n    console.log('  // 커스텀 오버레이를 숨깁니다-placeOverlay :',placeOverlay)\n\n\n    // 지도에 표시되고 있는 마커를 제거합니다\n    removeMarker();\n    contentNode.log('검색된값:',currCategory)\n    ps.categorySearch(currCategory, placesSearchCB, {useMapBounds:true}); \n}\n\n\n// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\nfunction placesSearchCB(data, status, pagination) {\n    console.log('👦장소 검색 완료')\n    if (status === kakao.maps.services.Status.OK) {\n        // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n        displayPlaces(data);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n        // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n\n    } else if (status === kakao.maps.services.Status.ERROR) {\n        // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n        \n    }\n}\n\n\n// 지도에 마커를 표출하는 함수입니다\nfunction displayPlaces(places) {\n    console.log('🚩addMarker:',addMarker)\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n    var order = document.getElementById(currCategory).getAttribute('data-order');\n\n    \n\n    for ( var i=0; i<places.length; i++ ) {\n\n            // 마커를 생성하고 지도에 표시합니다\n            var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x), order);\n\n            // 마커와 검색결과 항목을 클릭 했을 때\n            // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n            (function(marker, place) {\n                console.log('마커클릭')\n                kakao.maps.event.addListener(marker, 'click', function() {\n                    displayPlaceInfo(place);\n                });\n            })(marker, places[i]);\n    }\n}\n\n// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\nfunction addMarker(position, order) {\n    console.log('🚩addMarker:',addMarker)\n    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n        imageSize = new kakao.maps.Size(27, 28),  // 마커 이미지의 크기\n        imgOptions =  {\n            spriteSize : new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n            spriteOrigin : new kakao.maps.Point(46, (order*36)), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n            offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n        },\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n            marker = new kakao.maps.Marker({\n            position: position, // 마커의 위치\n            image: markerImage \n        });\n\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\n\n    console.log('👴markers:',markers)\n    return marker;\n}\n\n// 지도 위에 표시되고 있는 마커를 모두 제거합니다\nfunction removeMarker() {\n    for ( var i = 0; i < markers.length; i++ ) {\n        markers[i].setMap(null);\n    }   \n    markers = [];\n}\n\n// 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\nfunction displayPlaceInfo (place) {\n    console.log('클릭한 장소정보 호출')\n    console.log('place:',place)\n    var content = '<div class=\"placeinfo\">' +\n                    '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';   \n\n    if (place.road_address_name) {\n        content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' +\n                    '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n    }  else {\n        content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n    }                \n   \n    content += '    <span class=\"tel\">' + place.phone + '</span>' + \n                '</div>' + \n                '<div class=\"after\"></div>';\n\n    contentNode.innerHTML = content;\n    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n    placeOverlay.setMap(map);  \n}\n\n\n// 각 카테고리에 클릭 이벤트를 등록합니다\nfunction addCategoryClickEvent() {\n    console.log('카테고리 클릭 이벤트 등록 ')\n    var category = document.getElementById('category'),\n        children = category.children;\n        console.log('카테고리:',category)\n    for (var i=0; i<children.length; i++) {\n        children[i].onclick = onClickCategory;\n        console.log('onClickCategory:',onClickCategory)\n    }\n}\n\n//👨 여기서 문제발생 \n//👨  searchPlaces 호출이 안됨\n// 카테고리를 클릭했을 때 호출되는 함수입니다\nfunction onClickCategory() {\n    console.log('🚩카테고리 클릭-onClickCategory')\n    console.log('this:',this);\n    var id = this.id,\n        className = this.className;\n    placeOverlay.setMap(null);\n\n    if (className === 'on') {\n        currCategory = '';\n        changeCategoryClass();\n        removeMarker();\n    } else {\n        console.log('🚩카테고리 클릭-트리거')\n        currCategory = id;\n        console.log('currCategory:',currCategory)\n        changeCategoryClass(this);\n        searchPlaces();\n    }\n}\n\n// 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\nfunction changeCategoryClass(el) {\n    console.log('👴changeCategoryClass')\n    var category = document.getElementById('category'),\n        children = category.children,\n        i;\n\n    for ( i=0; i<children.length; i++ ) {\n        children[i].className = '';\n    }\n\n    if (el) {\n        el.className = 'on';\n    } \n} \n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}