{"ast":null,"code":"var _jsxFileName = \"/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport react, { useState, useRef, useEffect, createElement } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst PlaceInfo = place => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tel\",\n        children: place.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"after\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlaceInfo;\n\nconst CoffeeMap = () => {\n  _s();\n\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState([]); // 마커를 담을 배열\n\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({\n    zIndex: 1\n  });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n\n  const contentNode = /*#__PURE__*/createElement(\"div\"); // 마커 초기화 함수\n\n  function removeMarker() {\n    setMarker([]);\n  } // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  }\n\n  useEffect(() => {\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n    addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n    addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap);\n  }, []); // 카카오 맵 생성\n\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(NET_LOCATION.let, NET_LOCATION.lon)\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    children: \"Map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CoffeeMap, \"TvCNh8jbgsrfuxSJY/WsseWPr4A=\");\n\n_c2 = CoffeeMap;\nexport default CoffeeMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlaceInfo\");\n$RefreshReg$(_c2, \"CoffeeMap\");","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js"],"names":["React","react","useState","useRef","useEffect","createElement","KakaoMapScript","NET_LOCATION","kakao","window","PlaceInfo","place","phone","CoffeeMap","mapRef","marker","setMarker","map","setMap","placeOverlay","maps","CustomOverlay","zIndex","CATEGORY_CODE","contentNode","removeMarker","addEventHandle","target","type","callback","addEventListener","attachEvent","event","preventMap","container","current","options","center","LatLng","let","lon","Map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport react, { useState, useRef, useEffect, createElement } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\n\nconst { kakao } = window;\n\nconst PlaceInfo = (place) => {\n  return (\n    <React.Fragment>\n      <div>\n        <a></a>\n        <span></span>\n        <span></span>\n        <span className=\"tel\">{place.phone}</span>\n      </div>\n      <div className=\"after\"></div>\n    </React.Fragment>\n  );\n};\n\nconst CoffeeMap = () => {\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState([]); // 마커를 담을 배열\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({ zIndex: 1 });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n  const contentNode = createElement(\"div\");\n\n  // 마커 초기화 함수\n  function removeMarker() {\n    setMarker([]);\n  }\n\n  // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  }\n\n  useEffect(() => {\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n    addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n    addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap);\n  }, []);\n\n  // 카카오 맵 생성\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(\n        NET_LOCATION.let,\n        NET_LOCATION.lon,\n      ),\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n\n  return <div ref={mapRef}>Map</div>;\n};\n\nexport default CoffeeMap;\n"]},"metadata":{},"sourceType":"module"}