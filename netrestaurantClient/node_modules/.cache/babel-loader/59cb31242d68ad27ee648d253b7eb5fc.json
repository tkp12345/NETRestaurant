{"ast":null,"code":"var _jsxFileName = \"/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport react, { useState, useRef, useEffect, createElement } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst PlaceInfo = place => {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"placeinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"title\",\n        href: \"#!\" //   href={place.place_url}\n        ,\n        target: \"_blank\",\n        title: place.place_name,\n        children: place.place_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), place.road_address_name && /*#__PURE__*/_jsxDEV(\"span\", {\n        title: `${place.road_address_name}`,\n        children: place.road_address_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"jibun\",\n        title: `${place.address_name}`,\n        children: [\"\\uC9C0\\uBC88 : \", place.address_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tel\",\n        children: place.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"after\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PlaceInfo;\n\nconst CoffeeMap = () => {\n  _s();\n\n  const mapRef = useRef(null);\n  const [markers, setMarkers] = useState([]); // 마커를 담을 배열\n\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({\n    zIndex: 1\n  });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n\n  const contentNode = /*#__PURE__*/createElement(\"div\"); // 마커 초기화 함수\n\n  function removeMarker() {\n    setMarkers([]);\n  } // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n  function addMarker(position, order) {\n    const imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png\"; // 마커 이미지 url, 스프라이트 이미지를 씁니다\n\n    const imageSize = new kakao.maps.Size(27, 28); // 마커 이미지의 크기\n\n    const imgOptions = {\n      spriteSize: new kakao.maps.Size(72, 208),\n      // 스프라이트 이미지의 크기\n      spriteOrigin: new kakao.maps.Point(46, order * 36),\n      // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n      offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n    };\n    const markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n    const marker = new kakao.maps.Marker({\n      position: position,\n      // 마커의 위치\n      image: markerImage\n    });\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n    setMarkers(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  }\n\n  useEffect(() => {\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n    addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n    addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap);\n  }, []); // 카카오 맵 생성\n\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(NET_LOCATION.let, NET_LOCATION.lon)\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    children: \"Map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CoffeeMap, \"ei6xEtiRHffUMRjiWAT21VT006s=\");\n\n_c2 = CoffeeMap;\nexport default CoffeeMap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PlaceInfo\");\n$RefreshReg$(_c2, \"CoffeeMap\");","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js"],"names":["React","react","useState","useRef","useEffect","createElement","KakaoMapScript","NET_LOCATION","kakao","window","PlaceInfo","place","place_name","road_address_name","address_name","phone","CoffeeMap","mapRef","markers","setMarkers","map","setMap","placeOverlay","maps","CustomOverlay","zIndex","CATEGORY_CODE","contentNode","removeMarker","addEventHandle","target","type","callback","addEventListener","attachEvent","addMarker","position","order","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","marker","Marker","image","event","preventMap","container","current","options","center","LatLng","let","lon","Map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport react, { useState, useRef, useEffect, createElement } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\n\nconst { kakao } = window;\n\nconst PlaceInfo = (place) => {\n  return (\n    <React.Fragment>\n      <div className=\"placeinfo\">\n        <a\n          className=\"title\"\n          href=\"#!\"\n          //   href={place.place_url}\n          target={\"_blank\"}\n          title={place.place_name}\n        >\n          {place.place_name}\n        </a>\n        {place.road_address_name && (\n          <span title={`${place.road_address_name}`}>\n            {place.road_address_name}\n          </span>\n        )}\n        <span className=\"jibun\" title={`${place.address_name}`}>\n          지번 : {place.address_name}\n        </span>\n        <span className=\"tel\">{place.phone}</span>\n      </div>\n      <div className=\"after\"></div>\n    </React.Fragment>\n  );\n};\n\nconst CoffeeMap = () => {\n  const mapRef = useRef(null);\n  const [markers, setMarkers] = useState([]); // 마커를 담을 배열\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({ zIndex: 1 });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n  const contentNode = createElement(\"div\");\n\n  // 마커 초기화 함수\n  function removeMarker() {\n    setMarkers([]);\n  }\n\n  // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  }\n\n  // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n  function addMarker(position, order) {\n    const imageSrc =\n      \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png\"; // 마커 이미지 url, 스프라이트 이미지를 씁니다\n    const imageSize = new kakao.maps.Size(27, 28); // 마커 이미지의 크기\n    const imgOptions = {\n      spriteSize: new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n      spriteOrigin: new kakao.maps.Point(46, order * 36), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n      offset: new kakao.maps.Point(11, 28), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n    };\n    const markerImage = new kakao.maps.MarkerImage(\n      imageSrc,\n      imageSize,\n      imgOptions,\n    );\n    const marker = new kakao.maps.Marker({\n      position: position, // 마커의 위치\n      image: markerImage,\n    });\n\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n    setMarkers(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  }\n\n  useEffect(() => {\n    // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n    // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n    addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n    addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap);\n  }, []);\n\n  // 카카오 맵 생성\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(\n        NET_LOCATION.let,\n        NET_LOCATION.lon,\n      ),\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n\n  return <div ref={mapRef}>Map</div>;\n};\n\nexport default CoffeeMap;\n"]},"metadata":{},"sourceType":"module"}