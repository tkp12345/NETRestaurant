{"ast":null,"code":"import { useRef } from \"react\";\nconst {\n  kakao\n} = window; // https://apis.map.kakao.com/web/sample/keywordBasic/\n\nexport default function KakaoMapScript() {\n  // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n  let placeOverlay = new kakao.maps.CustomOverlay({\n    zIndex: 1\n  }),\n      contentNode = document.createElement(\"div\"),\n      // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다\n  markers = []; // 마커를 담을 배열입니다\n\n  console.log(contentNode);\n  const container = document.getElementById(\"myMap\");\n  const options = {\n    center: new kakao.maps.LatLng(37.520126, 126.929827),\n    level: 3\n  };\n  const map = new kakao.maps.Map(container, options); // 장소 검색 객체를 생성합니다\n\n  var ps = new kakao.maps.services.Places(map); // 지도에 idle 이벤트를 등록합니다\n\n  kakao.maps.event.addListener(map, \"idle\", () => searchPlaces(\"CE7\")); // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다\n\n  contentNode.className = \"placeinfo_wrap\"; // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n  // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n\n  addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n  addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap); // 커스텀 오버레이 컨텐츠를 설정합니다\n\n  placeOverlay.setContent(contentNode); // 각 카테고리에 클릭 이벤트를 등록합니다\n  //   addCategoryClickEvent();\n  // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  } // 카테고리 검색을 요청하는 함수입니다\n\n\n  function searchPlaces(category) {\n    if (!category) {\n      return;\n    } // 커스텀 오버레이를 숨깁니다\n\n\n    placeOverlay.setMap(null); // 지도에 표시되고 있는 마커를 제거합니다\n\n    removeMarker();\n    ps.categorySearch(category, placesSearchCB, {\n      useMapBounds: true\n    });\n  } // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\n\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n      displayPlaces(data);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {// 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    } else if (status === kakao.maps.services.Status.ERROR) {// 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    }\n  } // 지도에 마커를 표출하는 함수입니다\n\n\n  function displayPlaces(places) {\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n    var order = 4; //  document\n    //   .getElementById(currCategory)\n    //   .getAttribute(\"data-order\");\n\n    for (var i = 0; i < places.length; i++) {\n      // 마커를 생성하고 지도에 표시합니다\n      var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x), order); // 마커와 검색결과 항목을 클릭 했을 때\n      // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n\n      (function (marker, place) {\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          displayPlaceInfo(place);\n        });\n      })(marker, places[i]);\n    }\n  } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n  function addMarker(position, order) {\n    var imageSrc = \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png\",\n        // 마커 이미지 url, 스프라이트 이미지를 씁니다\n    imageSize = new kakao.maps.Size(27, 28),\n        // 마커 이미지의 크기\n    imgOptions = {\n      spriteSize: new kakao.maps.Size(72, 208),\n      // 스프라이트 이미지의 크기\n      spriteOrigin: new kakao.maps.Point(46, order * 36),\n      // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n      offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n    },\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n        marker = new kakao.maps.Marker({\n      position: position,\n      // 마커의 위치\n      image: markerImage\n    });\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  } // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\n\n  function removeMarker() {\n    for (var i = 0; i < markers.length; i++) {\n      markers[i].setMap(null);\n    }\n\n    markers = [];\n  } // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n\n\n  function displayPlaceInfo(place) {\n    console.log(place);\n    var content = '<div class=\"placeinfo\">' + '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + \"</a>\";\n    content += '\"<div class=\"row\">\"';\n    content += \"<div>\";\n\n    if (place.road_address_name) {\n      content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + \"</span>\" + '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + \")</span>\";\n    } else {\n      content += '    <span title=\"' + place.address_name + '\">' + place.address_name + \"</span>\";\n    }\n\n    content += '    <span class=\"tel\">' + place.phone + \"</span>\" + \"</div>\" + '<div class=\"after\"></div>';\n    content += \"</div>\";\n    content += \"<button>\" + \"좋아요 👍 \" + \"</button>\";\n    content += \"</div>\";\n    contentNode.innerHTML = content;\n    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n    placeOverlay.setMap(map);\n  } //   // 각 카테고리에 클릭 이벤트를 등록합니다\n  //   function addCategoryClickEvent() {\n  //     var category = document.getElementById(\"category\"),\n  //       children = category.children;\n  //     for (var i = 0; i < children.length; i++) {\n  //       children[i].onclick = onClickCategory;\n  //     }\n  //   }\n  //   // 카테고리를 클릭했을 때 호출되는 함수입니다\n  //   function onClickCategory() {\n  //     var id = this.id,\n  //       className = this.className;\n  //     placeOverlay.setMap(null);\n  //     if (className === \"on\") {\n  //       currCategory = \"\";\n  //       changeCategoryClass();\n  //       removeMarker();\n  //     } else {\n  //       currCategory = id;\n  //       changeCategoryClass(this);\n  //       searchPlaces();\n  //     }\n  //   }\n  //   // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n  //   function changeCategoryClass(el) {\n  //     var category = document.getElementById(\"category\"),\n  //       children = category.children,\n  //       i;\n  //     for (i = 0; i < children.length; i++) {\n  //       children[i].className = \"\";\n  //     }\n  //     if (el) {\n  //       el.className = \"on\";\n  //     }\n  //   }\n\n\n  searchPlaces(\"CE7\");\n}\n_c = KakaoMapScript;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMapScript\");","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/util/kakaoMapScript.js"],"names":["useRef","kakao","window","KakaoMapScript","placeOverlay","maps","CustomOverlay","zIndex","contentNode","document","createElement","markers","console","log","container","getElementById","options","center","LatLng","level","map","Map","ps","services","Places","event","addListener","searchPlaces","className","addEventHandle","preventMap","setContent","target","type","callback","addEventListener","attachEvent","category","setMap","removeMarker","categorySearch","placesSearchCB","useMapBounds","data","status","pagination","Status","OK","displayPlaces","ZERO_RESULT","ERROR","places","order","i","length","marker","addMarker","y","x","place","displayPlaceInfo","position","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","push","content","place_url","place_name","road_address_name","address_name","phone","innerHTML","setPosition"],"mappings":"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","sourcesContent":["import { useRef } from \"react\";\n\nconst { kakao } = window;\n\n// https://apis.map.kakao.com/web/sample/keywordBasic/\nexport default function KakaoMapScript() {\n  // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n  let placeOverlay = new kakao.maps.CustomOverlay({ zIndex: 1 }),\n    contentNode = document.createElement(\"div\"), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다\n    markers = []; // 마커를 담을 배열입니다\n\n  console.log(contentNode);\n\n  const container = document.getElementById(\"myMap\");\n  const options = {\n    center: new kakao.maps.LatLng(37.520126, 126.929827),\n    level: 3,\n  };\n  const map = new kakao.maps.Map(container, options);\n\n  // 장소 검색 객체를 생성합니다\n  var ps = new kakao.maps.services.Places(map);\n\n  // 지도에 idle 이벤트를 등록합니다\n  kakao.maps.event.addListener(map, \"idle\", () => searchPlaces(\"CE7\"));\n\n  // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다\n  contentNode.className = \"placeinfo_wrap\";\n\n  // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n  // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n  addEventHandle(contentNode, \"mousedown\", kakao.maps.event.preventMap);\n  addEventHandle(contentNode, \"touchstart\", kakao.maps.event.preventMap);\n\n  // 커스텀 오버레이 컨텐츠를 설정합니다\n  placeOverlay.setContent(contentNode);\n\n  // 각 카테고리에 클릭 이벤트를 등록합니다\n  //   addCategoryClickEvent();\n\n  // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  }\n\n  // 카테고리 검색을 요청하는 함수입니다\n  function searchPlaces(category) {\n    if (!category) {\n      return;\n    }\n\n    // 커스텀 오버레이를 숨깁니다\n    placeOverlay.setMap(null);\n\n    // 지도에 표시되고 있는 마커를 제거합니다\n    removeMarker();\n\n    ps.categorySearch(category, placesSearchCB, { useMapBounds: true });\n  }\n\n  // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n      displayPlaces(data);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n      // 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    } else if (status === kakao.maps.services.Status.ERROR) {\n      // 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    }\n  }\n\n  // 지도에 마커를 표출하는 함수입니다\n  function displayPlaces(places) {\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n    var order = 4;\n    //  document\n    //   .getElementById(currCategory)\n    //   .getAttribute(\"data-order\");\n\n    for (var i = 0; i < places.length; i++) {\n      // 마커를 생성하고 지도에 표시합니다\n      var marker = addMarker(\n        new kakao.maps.LatLng(places[i].y, places[i].x),\n        order,\n      );\n\n      // 마커와 검색결과 항목을 클릭 했을 때\n      // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n      (function (marker, place) {\n        kakao.maps.event.addListener(marker, \"click\", function () {\n          displayPlaceInfo(place);\n        });\n      })(marker, places[i]);\n    }\n  }\n\n  // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n  function addMarker(position, order) {\n    var imageSrc =\n        \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\n      imageSize = new kakao.maps.Size(27, 28), // 마커 이미지의 크기\n      imgOptions = {\n        spriteSize: new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n        spriteOrigin: new kakao.maps.Point(46, order * 36), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n        offset: new kakao.maps.Point(11, 28), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n      },\n      markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n      marker = new kakao.maps.Marker({\n        position: position, // 마커의 위치\n        image: markerImage,\n      });\n\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  }\n\n  // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n  function removeMarker() {\n    for (var i = 0; i < markers.length; i++) {\n      markers[i].setMap(null);\n    }\n    markers = [];\n  }\n\n  // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n  function displayPlaceInfo(place) {\n    console.log(place);\n\n    var content =\n      '<div class=\"placeinfo\">' +\n      '   <a class=\"title\" href=\"' +\n      place.place_url +\n      '\" target=\"_blank\" title=\"' +\n      place.place_name +\n      '\">' +\n      place.place_name +\n      \"</a>\";\n\n    content += '\"<div class=\"row\">\"';\n\n    content += \"<div>\";\n\n    if (place.road_address_name) {\n      content +=\n        '    <span title=\"' +\n        place.road_address_name +\n        '\">' +\n        place.road_address_name +\n        \"</span>\" +\n        '  <span class=\"jibun\" title=\"' +\n        place.address_name +\n        '\">(지번 : ' +\n        place.address_name +\n        \")</span>\";\n    } else {\n      content +=\n        '    <span title=\"' +\n        place.address_name +\n        '\">' +\n        place.address_name +\n        \"</span>\";\n    }\n\n    content +=\n      '    <span class=\"tel\">' +\n      place.phone +\n      \"</span>\" +\n      \"</div>\" +\n      '<div class=\"after\"></div>';\n    content += \"</div>\";\n    content += \"<button>\" + \"좋아요 👍 \" + \"</button>\";\n\n    content += \"</div>\";\n\n    contentNode.innerHTML = content;\n    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n    placeOverlay.setMap(map);\n  }\n\n  //   // 각 카테고리에 클릭 이벤트를 등록합니다\n  //   function addCategoryClickEvent() {\n  //     var category = document.getElementById(\"category\"),\n  //       children = category.children;\n\n  //     for (var i = 0; i < children.length; i++) {\n  //       children[i].onclick = onClickCategory;\n  //     }\n  //   }\n\n  //   // 카테고리를 클릭했을 때 호출되는 함수입니다\n  //   function onClickCategory() {\n  //     var id = this.id,\n  //       className = this.className;\n\n  //     placeOverlay.setMap(null);\n\n  //     if (className === \"on\") {\n  //       currCategory = \"\";\n  //       changeCategoryClass();\n  //       removeMarker();\n  //     } else {\n  //       currCategory = id;\n  //       changeCategoryClass(this);\n  //       searchPlaces();\n  //     }\n  //   }\n\n  //   // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n  //   function changeCategoryClass(el) {\n  //     var category = document.getElementById(\"category\"),\n  //       children = category.children,\n  //       i;\n\n  //     for (i = 0; i < children.length; i++) {\n  //       children[i].className = \"\";\n  //     }\n\n  //     if (el) {\n  //       el.className = \"on\";\n  //     }\n  //   }\n  searchPlaces(\"CE7\");\n}\n"]},"metadata":{},"sourceType":"module"}