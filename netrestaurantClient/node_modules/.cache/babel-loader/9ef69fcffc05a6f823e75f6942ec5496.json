{"ast":null,"code":"var _jsxFileName = \"/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js\",\n    _s = $RefreshSig$();\n\nimport react, { useState, useRef, useEffect } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoffeeMap = () => {\n  _s();\n\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState([]); // 마커를 담을 배열\n\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({\n    zIndex: 1\n  });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n  // 마커 초기화 함수\n\n  function removeMarker() {\n    setMarker([]);\n  } // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  } // 카카오 맵 생성\n\n\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(NET_LOCATION.let, NET_LOCATION.lon)\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    children: \"Map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CoffeeMap, \"PGH4Z9ppK4mhEmahPRw3CeqJYmM=\");\n\n_c = CoffeeMap;\nexport default CoffeeMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoffeeMap\");","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/components/map/CoffeeMap.js"],"names":["react","useState","useRef","useEffect","KakaoMapScript","NET_LOCATION","CoffeeMap","mapRef","marker","setMarker","map","setMap","placeOverlay","maps","CustomOverlay","zIndex","CATEGORY_CODE","removeMarker","addEventHandle","target","type","callback","addEventListener","attachEvent","container","current","options","center","LatLng","let","lon","Map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,MAAM,GAAGL,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC,CAFsB,CAEoB;;AAC1C,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMW,YAAY,GAAG,IAAIR,cAAc,CAACS,IAAf,CAAoBC,aAAxB,CAAsC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAtC,CAArB;AACA,QAAMC,aAAa,GAAG,KAAtB,CALsB,CAKO;AAE7B;;AACA,WAASC,YAAT,GAAwB;AACtBR,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAVqB,CAYtB;;;AACA,WAASS,cAAT,CAAwBC,MAAxB,EAAgCC,IAAhC,EAAsCC,QAAtC,EAAgD;AAC9C,QAAIF,MAAM,CAACG,gBAAX,EAA6B;AAC3BH,MAAAA,MAAM,CAACG,gBAAP,CAAwBF,IAAxB,EAA8BC,QAA9B;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,CAACI,WAAP,CAAmB,OAAOH,IAA1B,EAAgCC,QAAhC;AACD;AACF,GAnBqB,CAqBtB;;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,SAAS,GAAGjB,MAAM,CAACkB,OAAzB;AACA,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,IAAIvB,cAAc,CAACS,IAAf,CAAoBe,MAAxB,CACNvB,YAAY,CAACwB,GADP,EAENxB,YAAY,CAACyB,GAFP;AADM,KAAhB;AAMA,UAAMpB,GAAG,GAAG,IAAIN,cAAc,CAACS,IAAf,CAAoBkB,GAAxB,CAA4BP,SAA5B,EAAuCE,OAAvC,CAAZ;AACAf,IAAAA,MAAM,CAACD,GAAD,CAAN;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBAAO;AAAK,IAAA,GAAG,EAAEH,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnCD;;GAAMD,S;;KAAAA,S;AAqCN,eAAeA,SAAf","sourcesContent":["import react, { useState, useRef, useEffect } from \"react\";\nimport KakaoMapScript from \"../../util/kakaoMapScript\";\nimport NET_LOCATION from \"../../util/location\";\n\nconst CoffeeMap = () => {\n  const mapRef = useRef(null);\n  const [marker, setMarker] = useState([]); // 마커를 담을 배열\n  const [map, setMap] = useState(null);\n  const placeOverlay = new KakaoMapScript.maps.CustomOverlay({ zIndex: 1 });\n  const CATEGORY_CODE = \"CE7\"; // 카페 카테고리 코드\n\n  // 마커 초기화 함수\n  function removeMarker() {\n    setMarker([]);\n  }\n\n  // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent(\"on\" + type, callback);\n    }\n  }\n\n  // 카카오 맵 생성\n  useEffect(() => {\n    const container = mapRef.current;\n    const options = {\n      center: new KakaoMapScript.maps.LatLng(\n        NET_LOCATION.let,\n        NET_LOCATION.lon,\n      ),\n    };\n    const map = new KakaoMapScript.maps.Map(container, options);\n    setMap(map);\n  }, []);\n\n  return <div ref={mapRef}>Map</div>;\n};\n\nexport default CoffeeMap;\n"]},"metadata":{},"sourceType":"module"}