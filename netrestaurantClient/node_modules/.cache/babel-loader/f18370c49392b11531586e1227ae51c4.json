{"ast":null,"code":"import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\nconst {\n  kakao\n} = window; // 공통사용 로직 이기 떄문에 모듈로 뻈습니다\n//geoloctionApi\n//https://apis.map.kakao.com/web/sample/geolocationMarker/\n\nexport function displayMarker(locPosition, message, map, placeOverlay) {\n  // 마커를 생성합니다\n  var marker = new kakao.maps.Marker({\n    map: map,\n    position: locPosition\n  });\n  var iwContent = message,\n      // 인포윈도우에 표시할 내용\n  iwRemoveable = true; // 인포윈도우를 생성합니다\n\n  var infowindow = new kakao.maps.InfoWindow({\n    content: iwContent,\n    removable: iwRemoveable\n  }); // 마커에 클릭이벤트를 등록합니다\n\n  kakao.maps.event.addListener(marker, 'click', function () {\n    // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n    placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + locPosition.place_name + '</div>');\n    placeOverlay.open(map, marker);\n  }); // 인포윈도우를 마커위에 표시합니다 \n\n  infowindow.open(map, marker); // 지도 중심좌표를 접속위치로 변경합니다\n\n  map.setCenter(locPosition);\n}\nexport function kakaoGeolocationApi(map, placeOverlay) {\n  if (navigator.geolocation) {\n    console.log('isNavigator'); // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n\n    navigator.geolocation.getCurrentPosition(function (position) {\n      var lat = position.coords.latitude,\n          // 위도\n      lon = position.coords.longitude; // 경도\n\n      var locPosition = new kakao.maps.LatLng(lat, lon),\n          // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n      message = '<div style=\"padding:5px;\">현재위치</div>'; // 인포윈도우에 표시될 내용입니다\n      // 마커와 인포윈도우를 표시합니다\n\n      displayMarker(locPosition, message, map, placeOverlay);\n      return true;\n    });\n  } else {\n    // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n    console.log('!isNavigator');\n    var locPosition = new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),\n        message = 'geolocation을 사용할수 없어요..';\n    displayMarker(locPosition, message, map, placeOverlay);\n    return false;\n  }\n}\nexport default function kakaoMapApi(category) {\n  // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n  const placeOverlay = new kakao.maps.CustomOverlay({\n    zIndex: 1\n  });\n  console.log('placeOverlay:', placeOverlay);\n  let mapContainer = document.getElementById(KAKO_DOCUMENT_ID),\n      // 지도를 표시할 div \n  mapOption = {\n    center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),\n    // 지도의 중심좌표\n    level: 4 // 지도의 확대 레벨\n\n  };\n  console.log('mapContainer:', mapContainer); // 지도를 생성합니다    \n\n  const map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n  const ps = new kakao.maps.services.Places(map);\n  console.log('ps:', ps);\n  kakaoGeolocationApi(map, placeOverlay); // 카테고리로 은행을 검색합니다\n\n  ps.categorySearch(category, placesSearchCB, {\n    useMapBounds: true\n  }); // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      for (let i = 0; i < data.length; i++) {\n        displayMarker(data[i], map, map, '', placeOverlay);\n      }\n    }\n  } // // 지도에 마커를 표시하는 함수입니다\n  // function displayMarker(place) {\n  //     // 마커를 생성하고 지도에 표시합니다\n  //     const marker = new kakao.maps.Marker({\n  //         map: map,\n  //         position: new kakao.maps.LatLng(place.y, place.x) \n  //     });\n  //     // 마커에 클릭이벤트를 등록합니다\n  //     kakao.maps.event.addListener(marker, 'click', function() {\n  //         console.log(place)\n  //         // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n  //         placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n  //         placeOverlay.open(map, marker);\n  //     });\n  // }\n\n}","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/netrestaurantClient/src/util/kakaoMapApi.js"],"names":["CurrentLocation","KAKO_DOCUMENT_ID","NET_LOCATION","kakao","window","displayMarker","locPosition","message","map","placeOverlay","marker","maps","Marker","position","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","event","addListener","setContent","place_name","open","setCenter","kakaoGeolocationApi","navigator","geolocation","console","log","getCurrentPosition","lat","coords","latitude","lon","longitude","LatLng","let","kakaoMapApi","category","CustomOverlay","zIndex","mapContainer","document","getElementById","mapOption","center","level","Map","ps","services","Places","categorySearch","placesSearchCB","useMapBounds","data","status","pagination","Status","OK","i","length"],"mappings":"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","sourcesContent":["import { CurrentLocation, KAKO_DOCUMENT_ID, NET_LOCATION } from \"./location\";\n\nconst { kakao } = window;\n\n// 공통사용 로직 이기 떄문에 모듈로 뻈습니다\n\n//geoloctionApi\n//https://apis.map.kakao.com/web/sample/geolocationMarker/\nexport function displayMarker(locPosition, message,map,placeOverlay) {\n\n    // 마커를 생성합니다\n    var marker = new kakao.maps.Marker({  \n        map: map, \n        position: locPosition\n    }); \n    \n    var iwContent = message, // 인포윈도우에 표시할 내용\n        iwRemoveable = true;\n\n    // 인포윈도우를 생성합니다\n    var infowindow = new kakao.maps.InfoWindow({\n        content : iwContent,\n        removable : iwRemoveable\n    });\n\n    \n            // 마커에 클릭이벤트를 등록합니다\n            kakao.maps.event.addListener(marker, 'click', function() {\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n                placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + locPosition.place_name + '</div>');\n                placeOverlay.open(map, marker);\n            });\n    \n    // 인포윈도우를 마커위에 표시합니다 \n    infowindow.open(map, marker);\n    \n    // 지도 중심좌표를 접속위치로 변경합니다\n    map.setCenter(locPosition);      \n}   \n\nexport function kakaoGeolocationApi(map,placeOverlay){\n    \n    if (navigator.geolocation) {\n    console.log('isNavigator');\n\n        // GeoLocation을 이용해서 접속 위치를 얻어옵니다\n        navigator.geolocation.getCurrentPosition(function(position) {\n            \n            var lat = position.coords.latitude, // 위도\n                lon = position.coords.longitude; // 경도\n            \n            var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다\n                message = '<div style=\"padding:5px;\">현재위치</div>'; // 인포윈도우에 표시될 내용입니다\n            \n            // 마커와 인포윈도우를 표시합니다\n            displayMarker(locPosition, message,map,placeOverlay);\n                return true \n          });\n\n        \n    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다\n        console.log('!isNavigator');\n\n        var locPosition = new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon),    \n            message = 'geolocation을 사용할수 없어요..'\n            \n        displayMarker(locPosition, message,map,placeOverlay);\n        return false;\n    }\n}\n\n\nexport default function kakaoMapApi(category) {\n// 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n    const placeOverlay = new kakao.maps.CustomOverlay({zIndex:1});\n\n    console.log('placeOverlay:',placeOverlay)\n\n    let mapContainer = document.getElementById(KAKO_DOCUMENT_ID), // 지도를 표시할 div \n    mapOption = {\n        center: new kakao.maps.LatLng(NET_LOCATION.let, NET_LOCATION.let.lon), // 지도의 중심좌표\n        level: 4 // 지도의 확대 레벨\n    };  \n\n    console.log('mapContainer:',mapContainer)\n\n    // 지도를 생성합니다    \n    const map = new kakao.maps.Map(mapContainer, mapOption); \n\n    // 장소 검색 객체를 생성합니다\n    const ps = new kakao.maps.services.Places(map); \n    \n    console.log('ps:',ps)\n\n    kakaoGeolocationApi(map,placeOverlay)\n\n     // 카테고리로 은행을 검색합니다\n     ps.categorySearch(category, placesSearchCB, {useMapBounds:true}); \n\n       // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n    function placesSearchCB (data, status, pagination) {\n        if (status === kakao.maps.services.Status.OK) {\n            for (let i=0; i<data.length; i++) {\n                displayMarker(data[i],map,map,'',placeOverlay);    \n            }       \n        }\n    }\n\n        // // 지도에 마커를 표시하는 함수입니다\n        // function displayMarker(place) {\n\n        //     // 마커를 생성하고 지도에 표시합니다\n        //     const marker = new kakao.maps.Marker({\n        //         map: map,\n        //         position: new kakao.maps.LatLng(place.y, place.x) \n        //     });\n    \n        //     // 마커에 클릭이벤트를 등록합니다\n        //     kakao.maps.event.addListener(marker, 'click', function() {\n        //         console.log(place)\n        //         // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n        //         placeOverlay.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n        //         placeOverlay.open(map, marker);\n        //     });\n        // }\n\n\n\n\n}"]},"metadata":{},"sourceType":"module"}