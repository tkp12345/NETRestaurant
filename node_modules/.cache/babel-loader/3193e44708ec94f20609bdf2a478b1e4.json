{"ast":null,"code":"const {\n  kakao\n} = window; // https://apis.map.kakao.com/web/sample/keywordBasic/\n\nexport default function KakaoMapScript() {\n  // 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n  let placeOverlay = new kakao.maps.CustomOverlay({\n    zIndex: 1\n  }),\n      contentNode = document.createElement('div'),\n      // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다\n  markers = [],\n      // 마커를 담을 배열입니다\n  currCategory = ''; // 현재 선택된 카테고리를 가지고 있을 변수입니다\n\n  const container = document.getElementById('myMap');\n  const options = {\n    center: new kakao.maps.LatLng(37.520126, 126.929827),\n    level: 3\n  };\n  const map = new kakao.maps.Map(container, options); // 장소 검색 객체를 생성합니다\n\n  var ps = new kakao.maps.services.Places(map); // 지도에 idle 이벤트를 등록합니다\n\n  kakao.maps.event.addListener(map, 'idle', searchPlaces); // 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다\n\n  contentNode.className = 'placeinfo_wrap'; // 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n  // 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n\n  addEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\n  addEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap); // 커스텀 오버레이 컨텐츠를 설정합니다\n\n  placeOverlay.setContent(contentNode); // 각 카테고리에 클릭 이벤트를 등록합니다\n\n  addCategoryClickEvent(); // 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\n  function addEventHandle(target, type, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(type, callback);\n    } else {\n      target.attachEvent('on' + type, callback);\n    }\n  } // 카테고리 검색을 요청하는 함수입니다\n\n\n  function searchPlaces() {\n    if (!currCategory) {\n      return;\n    } // 커스텀 오버레이를 숨깁니다\n\n\n    placeOverlay.setMap(null); // 지도에 표시되고 있는 마커를 제거합니다\n\n    removeMarker();\n    ps.categorySearch(currCategory, placesSearchCB, {\n      useMapBounds: true\n    });\n  } // 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\n\n  function placesSearchCB(data, status, pagination) {\n    if (status === kakao.maps.services.Status.OK) {\n      // 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n      displayPlaces(data);\n    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {// 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    } else if (status === kakao.maps.services.Status.ERROR) {// 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n    }\n  } // 지도에 마커를 표출하는 함수입니다\n\n\n  function displayPlaces(places) {\n    // 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n    // 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n    var order = document.getElementById(currCategory).getAttribute('data-order');\n\n    for (var i = 0; i < places.length; i++) {\n      // 마커를 생성하고 지도에 표시합니다\n      var marker = addMarker(new kakao.maps.LatLng(places[i].y, places[i].x), order); // 마커와 검색결과 항목을 클릭 했을 때\n      // 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n\n      (function (marker, place) {\n        kakao.maps.event.addListener(marker, 'click', function () {\n          displayPlaceInfo(place);\n        });\n      })(marker, places[i]);\n    }\n  } // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\n\n  function addMarker(position, order) {\n    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png',\n        // 마커 이미지 url, 스프라이트 이미지를 씁니다\n    imageSize = new kakao.maps.Size(27, 28),\n        // 마커 이미지의 크기\n    imgOptions = {\n      spriteSize: new kakao.maps.Size(72, 208),\n      // 스프라이트 이미지의 크기\n      spriteOrigin: new kakao.maps.Point(46, order * 36),\n      // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n      offset: new kakao.maps.Point(11, 28) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\n    },\n        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\n        marker = new kakao.maps.Marker({\n      position: position,\n      // 마커의 위치\n      image: markerImage\n    });\n    marker.setMap(map); // 지도 위에 마커를 표출합니다\n\n    markers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n    return marker;\n  } // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\n\n  function removeMarker() {\n    for (var i = 0; i < markers.length; i++) {\n      markers[i].setMap(null);\n    }\n\n    markers = [];\n  } // 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n\n\n  function displayPlaceInfo(place) {\n    console.log(place);\n    var content = '<div class=\"placeinfo\">' + '   <a class=\"title\" href=\"' + place.place_url + '\" target=\"_blank\" title=\"' + place.place_name + '\">' + place.place_name + '</a>';\n\n    if (place.road_address_name) {\n      content += '    <span title=\"' + place.road_address_name + '\">' + place.road_address_name + '</span>' + '  <span class=\"jibun\" title=\"' + place.address_name + '\">(지번 : ' + place.address_name + ')</span>';\n    } else {\n      content += '    <span title=\"' + place.address_name + '\">' + place.address_name + '</span>';\n    }\n\n    content += '    <span class=\"tel\">' + place.phone + '</span>' + '</div>' + '<div class=\"after\"></div>';\n    contentNode.innerHTML = content;\n    placeOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n    placeOverlay.setMap(map);\n  } // 각 카테고리에 클릭 이벤트를 등록합니다\n\n\n  function addCategoryClickEvent() {\n    var category = document.getElementById('category'),\n        children = category.children;\n\n    for (var i = 0; i < children.length; i++) {\n      children[i].onclick = onClickCategory;\n    }\n  } // 카테고리를 클릭했을 때 호출되는 함수입니다\n\n\n  function onClickCategory() {\n    var id = this.id,\n        className = this.className;\n    placeOverlay.setMap(null);\n\n    if (className === 'on') {\n      currCategory = '';\n      changeCategoryClass();\n      removeMarker();\n    } else {\n      currCategory = id;\n      changeCategoryClass(this);\n      searchPlaces();\n    }\n  } // 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n\n\n  function changeCategoryClass(el) {\n    var category = document.getElementById('category'),\n        children = category.children,\n        i;\n\n    for (i = 0; i < children.length; i++) {\n      children[i].className = '';\n    }\n\n    if (el) {\n      el.className = 'on';\n    }\n  }\n}\n_c = KakaoMapScript;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoMapScript\");","map":{"version":3,"sources":["/Users/seob717/ts-study/netand/NETRestaurant/src/components/kakaoMapScript.js"],"names":["kakao","window","KakaoMapScript","placeOverlay","maps","CustomOverlay","zIndex","contentNode","document","createElement","markers","currCategory","container","getElementById","options","center","LatLng","level","map","Map","ps","services","Places","event","addListener","searchPlaces","className","addEventHandle","preventMap","setContent","addCategoryClickEvent","target","type","callback","addEventListener","attachEvent","setMap","removeMarker","categorySearch","placesSearchCB","useMapBounds","data","status","pagination","Status","OK","displayPlaces","ZERO_RESULT","ERROR","places","order","getAttribute","i","length","marker","addMarker","y","x","place","displayPlaceInfo","position","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","Marker","image","push","console","log","content","place_url","place_name","road_address_name","address_name","phone","innerHTML","setPosition","category","children","onclick","onClickCategory","id","changeCategoryClass","el"],"mappings":"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","sourcesContent":["const {kakao} = window;\n\n// https://apis.map.kakao.com/web/sample/keywordBasic/\nexport default function KakaoMapScript() {\n\t// 마커를 클릭했을 때 해당 장소의 상세정보를 보여줄 커스텀오버레이입니다\n\tlet placeOverlay = new kakao.maps.CustomOverlay({zIndex: 1}),\n\t\tcontentNode = document.createElement('div'), // 커스텀 오버레이의 컨텐츠 엘리먼트 입니다\n\t\tmarkers = [], // 마커를 담을 배열입니다\n\t\tcurrCategory = ''; // 현재 선택된 카테고리를 가지고 있을 변수입니다\n\n\tconst container = document.getElementById('myMap');\n\tconst options = {\n\t\tcenter: new kakao.maps.LatLng(37.520126, 126.929827),\n\t\tlevel: 3,\n\t};\n\tconst map = new kakao.maps.Map(container, options);\n\n\t// 장소 검색 객체를 생성합니다\n\tvar ps = new kakao.maps.services.Places(map);\n\n\t// 지도에 idle 이벤트를 등록합니다\n\tkakao.maps.event.addListener(map, 'idle', searchPlaces);\n\n\t// 커스텀 오버레이의 컨텐츠 노드에 css class를 추가합니다\n\tcontentNode.className = 'placeinfo_wrap';\n\n\t// 커스텀 오버레이의 컨텐츠 노드에 mousedown, touchstart 이벤트가 발생했을때\n\t// 지도 객체에 이벤트가 전달되지 않도록 이벤트 핸들러로 kakao.maps.event.preventMap 메소드를 등록합니다\n\taddEventHandle(contentNode, 'mousedown', kakao.maps.event.preventMap);\n\taddEventHandle(contentNode, 'touchstart', kakao.maps.event.preventMap);\n\n\t// 커스텀 오버레이 컨텐츠를 설정합니다\n\tplaceOverlay.setContent(contentNode);\n\n\t// 각 카테고리에 클릭 이벤트를 등록합니다\n\taddCategoryClickEvent();\n\n\t// 엘리먼트에 이벤트 핸들러를 등록하는 함수입니다\n\tfunction addEventHandle(target, type, callback) {\n\t\tif (target.addEventListener) {\n\t\t\ttarget.addEventListener(type, callback);\n\t\t} else {\n\t\t\ttarget.attachEvent('on' + type, callback);\n\t\t}\n\t}\n\n\t// 카테고리 검색을 요청하는 함수입니다\n\tfunction searchPlaces() {\n\t\tif (!currCategory) {\n\t\t\treturn;\n\t\t}\n\n\t\t// 커스텀 오버레이를 숨깁니다\n\t\tplaceOverlay.setMap(null);\n\n\t\t// 지도에 표시되고 있는 마커를 제거합니다\n\t\tremoveMarker();\n\n\t\tps.categorySearch(currCategory, placesSearchCB, {useMapBounds: true});\n\t}\n\n\t// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\n\tfunction placesSearchCB(data, status, pagination) {\n\t\tif (status === kakao.maps.services.Status.OK) {\n\t\t\t// 정상적으로 검색이 완료됐으면 지도에 마커를 표출합니다\n\t\t\tdisplayPlaces(data);\n\t\t} else if (status === kakao.maps.services.Status.ZERO_RESULT) {\n\t\t\t// 검색결과가 없는경우 해야할 처리가 있다면 이곳에 작성해 주세요\n\t\t} else if (status === kakao.maps.services.Status.ERROR) {\n\t\t\t// 에러로 인해 검색결과가 나오지 않은 경우 해야할 처리가 있다면 이곳에 작성해 주세요\n\t\t}\n\t}\n\n\t// 지도에 마커를 표출하는 함수입니다\n\tfunction displayPlaces(places) {\n\t\t// 몇번째 카테고리가 선택되어 있는지 얻어옵니다\n\t\t// 이 순서는 스프라이트 이미지에서의 위치를 계산하는데 사용됩니다\n\t\tvar order = document\n\t\t\t.getElementById(currCategory)\n\t\t\t.getAttribute('data-order');\n\n\t\tfor (var i = 0; i < places.length; i++) {\n\t\t\t// 마커를 생성하고 지도에 표시합니다\n\t\t\tvar marker = addMarker(\n\t\t\t\tnew kakao.maps.LatLng(places[i].y, places[i].x),\n\t\t\t\torder,\n\t\t\t);\n\n\t\t\t// 마커와 검색결과 항목을 클릭 했을 때\n\t\t\t// 장소정보를 표출하도록 클릭 이벤트를 등록합니다\n\t\t\t(function (marker, place) {\n\t\t\t\tkakao.maps.event.addListener(marker, 'click', function () {\n\t\t\t\t\tdisplayPlaceInfo(place);\n\t\t\t\t});\n\t\t\t})(marker, places[i]);\n\t\t}\n\t}\n\n\t// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n\tfunction addMarker(position, order) {\n\t\tvar imageSrc =\n\t\t\t\t'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_category.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\n\t\t\timageSize = new kakao.maps.Size(27, 28), // 마커 이미지의 크기\n\t\t\timgOptions = {\n\t\t\t\tspriteSize: new kakao.maps.Size(72, 208), // 스프라이트 이미지의 크기\n\t\t\t\tspriteOrigin: new kakao.maps.Point(46, order * 36), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\n\t\t\t\toffset: new kakao.maps.Point(11, 28), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\n\t\t\t},\n\t\t\tmarkerImage = new kakao.maps.MarkerImage(\n\t\t\t\timageSrc,\n\t\t\t\timageSize,\n\t\t\t\timgOptions,\n\t\t\t),\n\t\t\tmarker = new kakao.maps.Marker({\n\t\t\t\tposition: position, // 마커의 위치\n\t\t\t\timage: markerImage,\n\t\t\t});\n\n\t\tmarker.setMap(map); // 지도 위에 마커를 표출합니다\n\t\tmarkers.push(marker); // 배열에 생성된 마커를 추가합니다\n\n\t\treturn marker;\n\t}\n\n\t// 지도 위에 표시되고 있는 마커를 모두 제거합니다\n\tfunction removeMarker() {\n\t\tfor (var i = 0; i < markers.length; i++) {\n\t\t\tmarkers[i].setMap(null);\n\t\t}\n\t\tmarkers = [];\n\t}\n\n\t// 클릭한 마커에 대한 장소 상세정보를 커스텀 오버레이로 표시하는 함수입니다\n\tfunction displayPlaceInfo(place) {\n\t\tconsole.log(place);\n\n\t\tvar content =\n\t\t\t'<div class=\"placeinfo\">' +\n\t\t\t'   <a class=\"title\" href=\"' +\n\t\t\tplace.place_url +\n\t\t\t'\" target=\"_blank\" title=\"' +\n\t\t\tplace.place_name +\n\t\t\t'\">' +\n\t\t\tplace.place_name +\n\t\t\t'</a>';\n\n\t\tif (place.road_address_name) {\n\t\t\tcontent +=\n\t\t\t\t'    <span title=\"' +\n\t\t\t\tplace.road_address_name +\n\t\t\t\t'\">' +\n\t\t\t\tplace.road_address_name +\n\t\t\t\t'</span>' +\n\t\t\t\t'  <span class=\"jibun\" title=\"' +\n\t\t\t\tplace.address_name +\n\t\t\t\t'\">(지번 : ' +\n\t\t\t\tplace.address_name +\n\t\t\t\t')</span>';\n\t\t} else {\n\t\t\tcontent +=\n\t\t\t\t'    <span title=\"' +\n\t\t\t\tplace.address_name +\n\t\t\t\t'\">' +\n\t\t\t\tplace.address_name +\n\t\t\t\t'</span>';\n\t\t}\n\n\t\tcontent +=\n\t\t\t'    <span class=\"tel\">' +\n\t\t\tplace.phone +\n\t\t\t'</span>' +\n\t\t\t'</div>' +\n\t\t\t'<div class=\"after\"></div>';\n\n\t\tcontentNode.innerHTML = content;\n\t\tplaceOverlay.setPosition(new kakao.maps.LatLng(place.y, place.x));\n\t\tplaceOverlay.setMap(map);\n\t}\n\n\t// 각 카테고리에 클릭 이벤트를 등록합니다\n\tfunction addCategoryClickEvent() {\n\t\tvar category = document.getElementById('category'),\n\t\t\tchildren = category.children;\n\n\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\tchildren[i].onclick = onClickCategory;\n\t\t}\n\t}\n\n\t// 카테고리를 클릭했을 때 호출되는 함수입니다\n\tfunction onClickCategory() {\n\t\tvar id = this.id,\n\t\t\tclassName = this.className;\n\n\t\tplaceOverlay.setMap(null);\n\n\t\tif (className === 'on') {\n\t\t\tcurrCategory = '';\n\t\t\tchangeCategoryClass();\n\t\t\tremoveMarker();\n\t\t} else {\n\t\t\tcurrCategory = id;\n\t\t\tchangeCategoryClass(this);\n\t\t\tsearchPlaces();\n\t\t}\n\t}\n\n\t// 클릭된 카테고리에만 클릭된 스타일을 적용하는 함수입니다\n\tfunction changeCategoryClass(el) {\n\t\tvar category = document.getElementById('category'),\n\t\t\tchildren = category.children,\n\t\t\ti;\n\n\t\tfor (i = 0; i < children.length; i++) {\n\t\t\tchildren[i].className = '';\n\t\t}\n\n\t\tif (el) {\n\t\t\tel.className = 'on';\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}